SET search_path TO business;
-- Создание категорий товаров
INSERT INTO category (name) VALUES
('Собачья еда'), ('Поводок'), ('Намордник'), ('Миска для собак'),
('Кошачья еда'), ('Лоток'), ('Наполнитель'), ('Миска для кошек'),
('Фильтр для аквариума'), ('Аквариум'), ('Корм для рыб'), ('Аэратор');

-- Создание поставщиков
INSERT INTO supplier (name, contact_info) VALUES
('ЗооСнаб', 'support@zoosnab.ru'),
('ПитомецМаркет', 'support@pitometsmarket.ru'),
('АкваТрейд', 'support@akvatreid.ru'),
('КотопесОпт', 'support@kotopesopt.ru');

-- Создание товаров
INSERT INTO product (name, category_id, supplier_id, price, description, characteristics) VALUES
('Корм для собак Нямка', 1, 1, 500, 'Полнорационный сухой корм для собак', '{"вес": "2 кг", "ингредиенты": "говядина, рис, овощи"}'),
('Корм для собак Хрумка', 1, 2, 700, 'Сбалансированный корм для активных собак', '{"вес": "3 кг", "ингредиенты": "курица, кукуруза, витамины"}'),
('Корм для собак Вкусняшка', 1, 3, 600, 'Корм премиум-класса для собак', '{"вес": "2.5 кг", "ингредиенты": "ягненок, рис, морковь"}'),

('Поводок малый', 2, 4, 300, 'Прочный поводок для маленьких собак', '{"материал": "нейлон", "длина": "1.2 м"}'),
('Поводок средний', 2, 3, 400, 'Поводок средней длины для прогулок', '{"материал": "кожа", "длина": "1.5 м"}'),
('Поводок большой', 2, 2, 500, 'Длинный поводок для крупных пород', '{"материал": "нейлон", "длина": "2 м"}'),

('Намордник маленький', 3, 1, 350, 'Безопасный намордник для небольших собак', '{"материал": "пластик", "размер": "S"}'),
('Намордник средний', 3, 2, 450, 'Комфортный намордник для средних собак', '{"материал": "кожа", "размер": "M"}'),
('Намордник большой', 3, 4, 550, 'Прочный намордник для крупных собак', '{"материал": "металл", "размер": "L"}'),

('Миска металлическая', 4, 4, 200, 'Металлическая миска для воды и корма', '{"материал": "нержавеющая сталь", "объем": "1 л"}'),
('Миска керамическая', 4, 3, 300, 'Керамическая миска с рисунком', '{"материал": "керамика", "объем": "0.8 л"}'),
('Миска пластиковая', 4, 2, 150, 'Легкая пластиковая миска', '{"материал": "пластик", "объем": "0.5 л"}'),

('Корм для кошек Нямка', 5, 1, 400, 'Сухой корм для кошек с мясом', '{"вес": "1.5 кг", "ингредиенты": "индейка, рис, овощи"}'),
('Корм для кошек Хрумка', 5, 2, 500, 'Корм для взрослых кошек', '{"вес": "2 кг", "ингредиенты": "рыба, злаки, витамины"}'),
('Корм для кошек Вкусняшка', 5, 3, 450, 'Корм для кошек премиум-класса', '{"вес": "1.8 кг", "ингредиенты": "курица, ягоды, морковь"}'),

('Лоток малый', 6, 2, 350, 'Компактный лоток для кошек', '{"материал": "пластик", "размер": "40x30 см"}'),
('Лоток средний', 6, 4, 450, 'Удобный лоток среднего размера', '{"материал": "пластик", "размер": "50x40 см"}'),
('Лоток большой', 6, 1, 600, 'Большой лоток для крупных кошек', '{"материал": "пластик", "размер": "60x50 см"}'),

('Наполнитель силикагель', 7, 1, 500, 'Гигиенический наполнитель для кошек', '{"тип": "силикагель", "вес": "3 кг"}'),
('Наполнитель древесный', 7, 2, 300, 'Экологичный наполнитель для кошек', '{"тип": "древесные гранулы", "вес": "5 кг"}'),
('Наполнитель комкующийся', 7, 3, 400, 'Комкующийся наполнитель без запаха', '{"тип": "бентонит", "вес": "4 кг"}'),

('Фильтр маленький', 9, 1, 1000, 'Фильтр для маленьких аквариумов', '{"мощность": "5 Вт", "производительность": "300 л/ч"}'),
('Фильтр средний', 9, 3, 1500, 'Фильтр для аквариума среднего объема', '{"мощность": "10 Вт", "производительность": "600 л/ч"}'),
('Фильтр большой', 9, 4, 2000, 'Фильтр для больших аквариумов', '{"мощность": "15 Вт", "производительность": "1000 л/ч"}'),

('Миска керамическая', 8, 2, 300, 'Прочная керамическая миска, устойчивая и легко моется.', '{"материал": "керамика", "объем": "0.5 л"}'),
('Миска пластиковая', 8, 3, 150, 'Легкая пластиковая миска с резиновыми ножками против скольжения.', '{"материал": "пластик", "антискользящее покрытие": "есть"}'),
('Миска металлическая', 8, 4, 200, 'Миска из нержавеющей стали, устойчивая к коррозии и легко моется.', '{"материал": "нержавеющая сталь", "объем": "0.75 л"}'),

('Аквариум 20 л', 10, 2, 2500, 'Аквариум для небольших рыб', '{"объем": "20 л", "материал": "стекло"}'),
('Аквариум 50 л', 10, 4, 4000, 'Средний аквариум для пресноводных рыб', '{"объем": "50 л", "материал": "стекло"}'),
('Аквариум 100 л', 10, 3, 7000, 'Большой аквариум с крышкой', '{"объем": "100 л", "материал": "стекло"}'),

('Корм для рыб Нямка', 11, 1, 200, 'Сбалансированный корм для рыб', '{"тип": "хлопья", "вес": "100 г"}'),
('Корм для рыб Хрумка', 11, 2, 300, 'Питательный корм для аквариумных рыб', '{"тип": "гранулы", "вес": "150 г"}'),
('Корм для рыб Вкусняшка', 11, 3, 250, 'Корм для рыб с витаминами', '{"тип": "палочки", "вес": "120 г"}'),

('Аэратор слабый', 12, 3, 800, 'Аэратор для небольшого аквариума', '{"мощность": "3 Вт", "производительность": "200 л/ч"}'),
('Аэратор средний', 12, 4, 1200, 'Средний аэратор для аквариума', '{"мощность": "5 Вт", "производительность": "500 л/ч"}'),
('Аэратор мощный', 12, 4, 1800, 'Мощный аэратор для больших аквариумов', '{"мощность": "8 Вт", "производительность": "800 л/ч"}');

-- Создание магазинов
INSERT INTO shop (name, location) VALUES
('Зоомаг 1', 'ул. Пёсиковая, д. 10'), ('Зоомаг 2', 'ул. Красивых Попугаев, д. 38'), ('Зоомаг 3', 'ул. Крокодила Гены, д. 3');

-- Заполнение таблицы инвентаризации (все товары есть во всех магазинах)
INSERT INTO inventory (shop_id, product_id, quantity)
SELECT s.id, p.id, 100 + floor(random() * 100)
FROM shop s CROSS JOIN product p;

-- Создание покупателей
INSERT INTO customer (id, name, email, phone, loyalty_status, bonus_points)
SELECT
    id,
    CASE
        WHEN id BETWEEN 1 AND 100 THEN
            (ARRAY['Алексей', 'Иван', 'Пётр', 'Дмитрий', 'Сергей', 'Артём', 'Егор', 'Михаил', 'Олег', 'Владимир'])[(id - 1) % 10 + 1]
            || ' ' || (ARRAY['Мурлыкин', 'Когтев', 'Пушистиков', 'Лапкин', 'Котельников', 'Усатов', 'Барсиков', 'Мяукинов', 'Кискин', 'Хвостов'])[(id - 1) / 10 + 1]
        WHEN id BETWEEN 101 AND 200 THEN
            (ARRAY['Анна', 'Мария', 'Екатерина', 'Ольга', 'Татьяна', 'Алина', 'Ксения', 'Елена', 'Наталья', 'Юлия'])[(id - 101) % 10 + 1]
            || ' ' || (ARRAY['Кошкина', 'Лапкина', 'Пушистая', 'Мурлова', 'Усатова', 'Кислова', 'Барсикова', 'Мяукина', 'Хвостова', 'Котейкина'])[(id - 101) / 10 + 1]
        WHEN id BETWEEN 201 AND 250 THEN
            (ARRAY['Алексей', 'Иван', 'Пётр', 'Дмитрий', 'Сергей', 'Артём', 'Егор', 'Михаил', 'Олег', 'Владимир'])[(id - 201) % 10 + 1]
            || ' ' || (ARRAY['Рыбинович', 'Царапидзе', 'Котейко', 'Гавгавян', 'Когтюк'])[(id - 201) / 10 + 1]
        ELSE
        (ARRAY['Анна', 'Мария', 'Екатерина', 'Ольга', 'Татьяна', 'Алина', 'Ксения', 'Елена', 'Наталья', 'Юлия'])[(id - 251) % 10 + 1]
        || ' ' || (ARRAY['Рыбинович', 'Царапидзе', 'Котейко', 'Гавгавян', 'Когтюк'])[(id - 251) / 10 + 1]
    END,
    LOWER(REPLACE(business.transliterate(
        CASE
        WHEN id BETWEEN 1 AND 100 THEN
            (ARRAY['Алексей', 'Иван', 'Пётр', 'Дмитрий', 'Сергей', 'Артём', 'Егор', 'Михаил', 'Олег', 'Владимир'])[(id - 1) % 10 + 1]
            || ' ' || (ARRAY['Мурлыкин', 'Когтев', 'Пушистиков', 'Лапкин', 'Котельников', 'Усатов', 'Барсиков', 'Мяукинов', 'Кискин', 'Хвостов'])[(id - 1) / 10 + 1]
        WHEN id BETWEEN 101 AND 200 THEN
            (ARRAY['Анна', 'Мария', 'Екатерина', 'Ольга', 'Татьяна', 'Алина', 'Ксения', 'Елена', 'Наталья', 'Юлия'])[(id - 101) % 10 + 1]
            || ' ' || (ARRAY['Кошкина', 'Лапкина', 'Пушистая', 'Мурлова', 'Усатова', 'Кислова', 'Барсикова', 'Мяукина', 'Хвостова', 'Котейкина'])[(id - 101) / 10 + 1]
        WHEN id BETWEEN 201 AND 250 THEN
            (ARRAY['Алексей', 'Иван', 'Пётр', 'Дмитрий', 'Сергей', 'Артём', 'Егор', 'Михаил', 'Олег', 'Владимир'])[(id - 201) % 10 + 1]
            || ' ' || (ARRAY['Рыбинович', 'Царапидзе', 'Котейко', 'Гавгавян', 'Когтюк'])[(id - 201) / 10 + 1]
        ELSE
        (ARRAY['Анна', 'Мария', 'Екатерина', 'Ольга', 'Татьяна', 'Алина', 'Ксения', 'Елена', 'Наталья', 'Юлия'])[(id - 251) % 10 + 1]
        || ' ' || (ARRAY['Рыбинович', 'Царапидзе', 'Котейко', 'Гавгавян', 'Когтюк'])[(id - 251) / 10 + 1]
    END
    ), ' ', '')) || '@lapland.ru',
    '+79' || LPAD(FLOOR(RANDOM() * 100)::TEXT, 2, '0') || LPAD(id::TEXT, 3, '0') || LPAD(FLOOR(RANDOM() * 10000)::TEXT, 4, '0'),
    (ARRAY['BRONZE'::business.loyalty_status, 'SILVER'::business.loyalty_status, 'GOLD'::business.loyalty_status])[FLOOR(RANDOM() * 3 + 1)],
    FLOOR(RANDOM() * 1000)
FROM generate_series(1, 300) AS id;

-- Создание покупок (пример для 3000 записей)
DO $$
DECLARE i INT := 0;
BEGIN
    WHILE i < 3000 LOOP
        INSERT INTO purchase (customer_id, shop_id, purchase_date, total_amount)
        VALUES (
            (SELECT id FROM customer ORDER BY random() LIMIT 1),
            (SELECT id FROM shop ORDER BY random() LIMIT 1),
            NOW() - (random() * interval '365 days'),
            0 -- будет рассчитана позже
        ) RETURNING id INTO i;

        INSERT INTO purchase_item (purchase_id, product_id, quantity)
        SELECT i, p.id, (1 + (FLOOR(random() * 1000))::INTEGER % 3)
        FROM product p ORDER BY random() LIMIT (1 + floor(random() * 3));

        i := i + 1;
    END LOOP;
END $$;

UPDATE purchase p
SET total_amount = sub.total_amount_with_discount
FROM (
    SELECT
        p.id AS purchase_id,
        SUM(pi.quantity * pr.price) *
            CASE
                WHEN c.loyalty_status = 'BRONZE' THEN 0.97
                WHEN c.loyalty_status = 'SILVER' THEN 0.95
                WHEN c.loyalty_status = 'GOLD' THEN 0.93
            END AS total_amount_with_discount
    FROM
        purchase_item pi
        JOIN product pr ON pi.product_id = pr.id
        JOIN purchase p ON pi.purchase_id = p.id
        JOIN customer c ON p.customer_id = c.id
    GROUP BY
        p.id, c.loyalty_status
) AS sub
WHERE p.id = sub.purchase_id;