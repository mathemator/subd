version: '3.8'

services:
  postgres_master:
#    данная секция исправно работает на линуксе, но с Docker Desktop
#    возникают невнятные проблемы. код добавляю как дополнительный полезный штрих
#    поэтому предполагается, что образ из .dockerfile собран независимо заранее
#    build:
#      context: .
#      dockerfile: postgres-master.dockerfile
    image: postgres-master:1.0
    container_name: postgres_master
    environment:
      POSTGRES_DB: shop_db
      POSTGRES_USER: shop_user
      POSTGRES_PASSWORD: shop_password
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -d shop_db -U shop_user || exit 1
      interval: 1s
      timeout: 60s
      retries: 5
      start_period: 110s
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init:/docker-entrypoint-initdb.d  # Папка с инициализационными скриптами
    command: >
      bash -c "mkdir -p /mnt/shop_ts && 
      chown -R postgres:postgres /mnt/shop_ts && 
      exec docker-entrypoint.sh postgres 
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf"
    networks:
      - shop_network

  postgres_replica:
    image: postgres:17-bullseye
    container_name: postgres_replica
    environment:
      POSTGRES_DB: shop_db
      POSTGRES_USER: shop_user
      POSTGRES_PASSWORD: shop_password
    depends_on:
      - postgres_master
      - flyway
    ports:
      - "5433:5432"
    healthcheck:
      test: pg_isready -d shop_db -U shop_user || exit 1
      interval: 1s
      timeout: 60s
      retries: 5
      start_period: 110s
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    command: >
      bash -c "mkdir -p /mnt/shop_ts &&
        chown -R postgres:postgres /mnt/shop_ts &&
        echo 'postgres_master:5432:*:replication_user:replication_password' >> /var/lib/postgresql/.pgpass &&
        chown postgres:postgres /var/lib/postgresql/.pgpass &&
        chmod 600 /var/lib/postgresql/.pgpass &&
        su - postgres -c '
        pg_basebackup --host=postgres_master --username=replication_user --pgdata=/var/lib/postgresql/data --wal-method=stream --write-recovery-conf ' &&
        exec /usr/local/bin/docker-entrypoint.sh postgres -c 'recovery_min_apply_delay=5min'"
    networks:
      - shop_network

  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://postgres_master:5432/shop_db -user=shop_user -password=shop_password -baselineOnMigrate=true migrate
    volumes:
      - ./scripts/migrations:/flyway/sql
      - ./flyway/flyway.conf:/flyway/conf/flyway.conf
    depends_on:
      postgres_master:
        condition: service_healthy
    networks:
      - shop_network

networks:
  shop_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  postgres_replica_data:
    driver: local
